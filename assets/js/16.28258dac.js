(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{362:function(t,n,e){"use strict";e.r(n);var a=e(43),r=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("相信知道ajax的人都知道异步回调是怎么一回事。在一些业务中很容易写成下面这个恶心的代码：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$.ajax({\n    succss:function(res){\n       $.ajax({\n           data:res.xxx\n           succss:function(res2){\n                $.ajax({\n                    data:res2.xxx\n\n                })\n            }\n      })\n    }\n})\n")])])]),e("p",[t._v("哦，反正我没写过这种ajax，看起来真的挺恶心的，所以拿来举例。\n但是，nodejs做后台的时候，这个情况就像下面：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("{\n    {\n        {\n            {\n                {\n                    {\n                        {\n                            {\n\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n")])])]),e("p",[t._v("唉~~~触目惊心,不仅仅阅读困难，维护起来也是要了老命啊。")]),t._v(" "),e("p",[t._v("不过，别忘了ES6的Promise对象，都说字如其人，Promise这家伙是名如其人，就是一承诺：这件事我去做，做成了怎么怎么样，做不成就拿人头来谢罪。下面就是用Promise对fs.readFile()的包装以及使用：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(' function readFile(path) {\n \treturn new Promise(function (resolve, reject) {\n \t\tfs.readFile(path, (err, data) => {\n\t\t\tif (err) {\n \t\t\t\treject(err);\n \t\t\t}\n \t\t\tresolve(data);\n \t\t})\n \t})\n }\n\n readFile("xxx")\n .then(function(data){\n     ...\n })\n .catch(function(err){\n     ...  \n })\n')])])]),e("p",[t._v("这么一来在观感上就要强很多，但自己的代码量也增加不少。好在有第三方的包替我们做了许多的工作例如 mz:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('const fs=require("mz/fs");\n\n fs.readFile("xxx")\n .then(function(data){\n   ...\n })\n .catch(function(err){\n     ...  \n })\n')])])]),e("p",[t._v("很舒心有没有。。。。如果觉得答案是肯定的，小伙子，还是图样图森破。慢慢的写着写着就会发现有时一堆的then这样的东西。")]),t._v(" "),e("p",[t._v("为了耍得更加欢快，还是用Generator：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('const fs=require("mz/fs");\nfunction * doSome(){\n    let a=yield fs.readfile(aaa);\n    let b=yield fs.readfile(bbb)\n    return b;\n}\nvar f=doSome();\nf.next();\nf.next();\nf.next();\n')])])]),e("p",[t._v("终于 这异步写起来像同步代码了，但是需要 f.next() 方法一步一步往下执行，这样手动控制整个流程给人很不友好的感觉，好在有co库可以帮我们解决。")]),t._v(" "),e("p",[t._v("不过co也没快活过太久，ES7标准中 带来了异步的新语法 async/await,其实这只不过是generator的语法糖，把*换成async,把yield换成await,并且自带执行器;这么一来就在语义上显得特别友好。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('const fs=require("mz/fs");\n async function  doSome(){\n    let a=await fs.readfile(aaa);\n    let b=await fs.readfile(bbb)\n    return b;\n}\nvar f=doSome();\n\n')])])]),e("p",[t._v("我仿佛看到了C#的影子、、、、、哈哈哈哈。")]),t._v(" "),e("p",[t._v("光说不练瞎扯淡,于是乎我把上次做的那个获取win10壁纸的代码全部用async语法改造了，先贴旧的用then语法的：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//old code\nold code\nconst fs = require('fs');\nconst path = require('path');\nconst imageInfo = require('image-info');\n\n/*壁纸所在的源文件夹*/\nconst src = path.join(process.env.localappdata, \"\\\\Packages\\\\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\\\\LocalState\\\\Assets\\\\\");\n/*要拷贝到的文件夹：这个是在‘图片/spotlight’*/\nconst target = path.join(process.env.userprofile, 'Pictures\\\\spotlight');\n\n/*判断spotlight文件夹是否存在*/\ntry {\n\tconst s = fs.statSync(target);\n\tif (!s.isDirectory()) {\n\t\tfs.mkdirSync(target);\n\t}\n} catch (error) {\n\tfs.mkdirSync(target);\n}\n\n/*读取源文件目录下的所有文件*/\nconst files = fs.readdirSync(src);\nfiles.forEach(file => {\n\n\tconst stats = fs.statSync(path.join(src, file));\n\n\tif (stats.isFile()) {\n\n\t\treadFile(path.join(src, file))\n\t\t\t.then(function (data) {\n\t\t\t\t/*判断文件后缀*/\n\t\t\t\tconst tempData = data.slice(0, 7);\n\t\t\t\tlet filename;\n\t\t\t\tif (tempData.indexOf(Buffer.from('FFD8FF', \"hex\")) != -1) {\n\n\t\t\t\t\tfilename = path.join(target, file + \".jpg\");\n\n\t\t\t\t} else if (tempData.indexOf(Buffer.from('89504E47', 'hex')) != -1) {\n\n\t\t\t\t\tfilename = path.join(target, file + \".png\");\n\t\t\t\t}\n\n\t\t\t\tif (filename) {\n\n\t\t\t\t\tfs.writeFile(filename, data, err => {\n\n\t\t\t\t\t\tif (err) console.log(err);\n\n\t\t\t\t\t\timgInfo(filename)\n\t\t\t\t\t\t\t.then(function (data) {\n\t\t\t\t\t\t\t\t/*过滤掉小文件*/\n\t\t\t\t\t\t\t\tvar wh = data.height / data.width;\n\t\t\t\t\t\t\t\tif (wh == 1) {\n\t\t\t\t\t\t\t\t\tfs.unlink(filename, (err) => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(err)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (err) {\n\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\n\t}\n})\n\nfunction readFile(path) {\n\treturn new Promise(function (resolve, reject) {\n\t\tfs.readFile(path, (err, data) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tresolve(data);\n\t\t})\n\t})\n}\n\nfunction imgInfo(filename) {\n\treturn new Promise(function (resolve, reject) {\n\t\timageInfo(filename, (err, info) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tresolve(info);\n\n\t\t})\n\t})\n}\n")])])]),e("p",[t._v("下面是async改造后的：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const fs = require('mz/fs');\nconst path = require('path');\nconst imageInfo = require('image-info');\n\n/*壁纸所在的源文件夹*/\nconst src = path.join(process.env.localappdata, \"\\\\Packages\\\\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\\\\LocalState\\\\Assets\\\\\");\n/*要拷贝到的文件夹：这个是在‘图片/spotlight’*/\nconst target = path.join(process.env.userprofile, 'Pictures\\\\spotlight');\n\nstart();\n\nasync function start() {\n\tawait checkdir();\n\tawait copyFile();\n}\n\n/*判断spotlight文件夹是否存在*/\nasync function checkdir() {\n\ttry {\n\t\tconst s = await fs.stat(target);\n\t\tif (!s.isDirectory()) {\n\t\t\tawait fs.mkdir(target);\n\t\t}\n\t} catch (error) {\n\t\tawait fs.mkdir(target);\n\t}\n}\n\n/*读取源文件目录下的所有文件*/\nasync function copyFile() {\n\tconst files = await fs.readdir(src);\n\tfiles.forEach(async (file) => {\n\t\tconst stats = await fs.stat(path.join(src, file));\n\t\tif (stats.isFile()) {\n\t\t\tconst data = await fs.readFile(path.join(src, file));\n\t\t\tconst tempData = data.slice(0, 7);\n\t\t\tlet filename;\n\t\t\tif (tempData.indexOf(Buffer.from('FFD8FF', \"hex\")) != -1) {\n\n\t\t\t\tfilename = path.join(target, file + \".jpg\");\n\n\t\t\t} else if (tempData.indexOf(Buffer.from('89504E47', 'hex')) != -1) {\n\n\t\t\t\tfilename = path.join(target, file + \".png\");\n\t\t\t}\n\t\t\tif (filename) {\n\n\t\t\t\tawait fs.writeFile(filename, data);\n\t\t\t\tconst info = await imgInfo(filename);\n\n\t\t\t\tvar wh = info.height / info.width;\n\t\t\t\tif (wh == 1) {\n\t\t\t\t\tawait fs.unlink(filename);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t});\n}\n\n\nfunction imgInfo(filename) {\n\treturn new Promise(function (resolve, reject) {\n\t\timageInfo(filename, (err, info) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tresolve(info);\n\n\t\t})\n\t})\n}\n")])])]),e("p",[t._v("没有对比就没有伤害啊。")]),t._v(" "),e("p",[t._v("其实我就是说说async好,不存在任何语法上的教程。如果想了解或者深入了解相关知识，很明显你需要这个"),e("a",{attrs:{href:"http://es6.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6入门教程"),e("OutboundLink")],1),t._v("; 建议多学习一些基本语法,算法,设计模式相关的知识。要知其然还要知其所以然。")]),t._v(" "),e("p",[t._v("这里是‘获取win10壁纸’的项目原址："),e("a",{attrs:{href:"https://github.com/guobing1993/win10-spotlight",target:"_blank",rel:"noopener noreferrer"}},[t._v("win10spotlight"),e("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=r.exports}}]);