(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{371:function(a,s,t){"use strict";t.r(s);var e=t(43),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"首先下载安装程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首先下载安装程序"}},[a._v("#")]),a._v(" 首先下载安装程序")]),a._v(" "),t("p",[a._v("windows的话首先确认windows是win10专业版，并且开启了cpu虚拟化和hyper-v,如果不是请下载docker-toolbox。\n其实他们的区别就是一个是是在windows在自带的虚拟机中运行一个是安装第三方的虚拟机。\n下载地址：（下载的是社区版本，即ce）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("https://www.docker.com/products/docker-desktop\n")])])]),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),t("p",[a._v("点击下载好的安装程序，按照提示下一步，下一步基本就没什么问题了。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-c0b8f241a35da89b.png",alt:"Snipaste_2018-09-24_09-43-24.png"}})]),a._v(" "),t("p",[a._v("这里可以选择使用windows容器,不选的话就默认使用linux容器。那就默认使用linux容器吧。")]),a._v(" "),t("h3",{attrs:{id:"运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[a._v("#")]),a._v(" 运行")]),a._v(" "),t("p",[a._v("打开安装好的程序，待桌面右下角出现这样的图标的时候说明docker已经运行起来了。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-7a85c6e083bb7542.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("然后打开终端，键入如下命令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker version\n")])])]),t("p",[a._v("可以看到如下输出，说明docker是完全跑起来了。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-e15128f4ca6bf1b6.png",alt:"image.png"}})]),a._v(" "),t("h3",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),t("p",[a._v("首先先看下有没有下载过的镜像")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker images\n")])])]),t("p",[a._v("输出如下，可以看到现在并没有安装任何镜像")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-171268e2f5c4c925.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("为了演示，先下个mysql")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker pull mysql\n")])])]),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-b56ddc691c463c28.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("这样mysql镜像就下载好.再次查看镜像就会发现多了一个mysql")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-5b37c4f6b47ebbbd.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("接下来运行mysql这个镜像,并初始化密码，数据库。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_DATABASE=bing mysql \n")])])]),t("p",[a._v("-d 在后台运行\n-p 指定端口 将本机的3306端口映射带容器的3306端口\n运行之后将输出容器的id")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-13fcabddb6d4dcff.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("然后可以通过命令查看正在运行的容器")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker ps\n")])])]),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-2cc7013e03bfa729.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("用Navicat连接一下试试,嗯，完全没问题。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-c0677f700f54de55.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("接下来下载一个tomcat镜像，运行jpress试试")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker pull tomcat\n")])])]),t("p",[a._v("下载好了先启动")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-2ae44b21724276bf.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("启动成功之后在浏览器输入localhost:8080")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-4612841934b996d1.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("先停掉tomcat,接下来通过jpress构建自己的镜像")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" docker stop 容器id\n")])])]),t("p",[a._v("新建文件夹myDocker,将下载好的jpress.war文件拷贝进去,然后新建Dockerfile文件，内容如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("from tomcat\n\nMAINTAINER guobing1993 guobing93@163.com\n\nCOPY jpress.war /usr/local/tomcat/webapps\n")])])]),t("p",[a._v("在该目录下执行命令构建自己的镜像")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" docker  build -t myjpress:latest .\n")])])]),t("p",[a._v("成功之后就可以通过docker images查看到镜像列表中多了一个name为myjpress的镜像")]),a._v(" "),t("p",[a._v("接下来运行myjpress镜像")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker run -d -p 8080:8080 myjpress\n")])])]),t("p",[a._v("在浏览器中输入localhost:8080/jpress就可以看到jpress的界面了")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-c1f86bb21b73f725.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("接下来的一步就是连接上面启动的数据库,值得注意的是连接的数据库名称还有数据库主机地址，可以通过终端中ipconfig查看")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-cc948b5da30c3f80.png",alt:"image.png"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/dockerWin/6191737-bffe50f13ca56b96.png",alt:"image.png"}})]),a._v(" "),t("p",[a._v("f**k，windows环境有坑,连不上。")])])}),[],!1,null,null,null);s.default=r.exports}}]);